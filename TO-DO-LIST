import json
from datetime import datetime

# File to store tasks
TASK_FILE = "tasks.json"

# Load tasks from file
def load_tasks():
    try:
        with open(TASK_FILE, "r") as file:
            return json.load(file)
    except FileNotFoundError:
        return []
    except json.JSONDecodeError:
        return []

# Save tasks to file
def save_tasks(tasks):
    with open(TASK_FILE, "w") as file:
        json.dump(tasks, file, indent=4)

# Add a new task
def add_task(tasks):
    title = input("Enter task title: ")
    description = input("Enter task description: ")
    due_date = input("Enter due date (YYYY-MM-DD): ")
    priority = input("Enter priority (Low, Medium, High): ")

    try:
        due_date = datetime.strptime(due_date, "%Y-%m-%d").strftime("%Y-%m-%d")
    except ValueError:
        print("Invalid date format. Task not added.")
        return

    task = {
        "id": len(tasks) + 1,
        "title": title,
        "description": description,
        "due_date": due_date,
        "priority": priority,
        "status": "Pending"
    }
    tasks.append(task)
    print("Task added successfully!")

# View all tasks
def view_tasks(tasks):
    if not tasks:
        print("No tasks available.")
        return

    print("\nYour Tasks:")
    for task in tasks:
        print(f"ID: {task['id']}, Title: {task['title']}, Due: {task['due_date']}, Priority: {task['priority']}, Status: {task['status']}")

# Update a task
def update_task(tasks):
    task_id = int(input("Enter task ID to update: "))
    task = next((t for t in tasks if t["id"] == task_id), None)

    if not task:
        print("Task not found.")
        return

    print("What would you like to update?")
    print("1. Title\n2. Description\n3. Due Date\n4. Priority\n5. Mark as Completed")
    choice = input("Enter choice: ")

    if choice == "1":
        task["title"] = input("Enter new title: ")
    elif choice == "2":
        task["description"] = input("Enter new description: ")
    elif choice == "3":
        new_due_date = input("Enter new due date (YYYY-MM-DD): ")
        try:
            task["due_date"] = datetime.strptime(new_due_date, "%Y-%m-%d").strftime("%Y-%m-%d")
        except ValueError:
            print("Invalid date format. Due date not updated.")
            return
    elif choice == "4":
        task["priority"] = input("Enter new priority (Low, Medium, High): ")
    elif choice == "5":
        task["status"] = "Completed"
    else:
        print("Invalid choice.")
        return

    print("Task updated successfully!")

# Delete a task
def delete_task(tasks):
    task_id = int(input("Enter task ID to delete: "))
    task = next((t for t in tasks if t["id"] == task_id), None)

    if not task:
        print("Task not found.")
        return

    tasks.remove(task)
    print("Task deleted successfully!")

# Main function
def main():
    tasks = load_tasks()

    while True:
        print("\nTo-Do List Menu")
        print("1. Add Task")
        print("2. View Tasks")
        print("3. Update Task")
        print("4. Delete Task")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            add_task(tasks)
        elif choice == "2":
            view_tasks(tasks)
        elif choice == "3":
            update_task(tasks)
        elif choice == "4":
            delete_task(tasks)
        elif choice == "5":
            save_tasks(tasks)
            print("Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
